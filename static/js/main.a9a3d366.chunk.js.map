{"version":3,"sources":["components/components.module.css","App.module.css","features/order-book/OrderBook.module.css","features/order-book/orderBookSelectors.ts","app/hooks.ts","features/order-book/OrderBookGroupingDropdown.tsx","features/order-book/orderBookSlice.ts","features/order-book/OrderLevelRow.tsx","features/order-book/OrderBookValueHeader.tsx","features/order-book/OrderBookColumn.tsx","components/Button.tsx","components/icons/DangerIcon.tsx","features/order-book/KillFeedButton.tsx","components/icons/ToggleIcon.tsx","features/order-book/ToggleFeedButton.tsx","features/order-book/OrderBookLoader.tsx","features/order-book/OrderBook.tsx","App.tsx","features/order-book/orderBookMessageHandler.ts","app/messageHandler.ts","features/order-book/orderBookMessageHandlerMiddleware.ts","app/rootReducer.ts","app/store.ts","index.tsx"],"names":["module","exports","getBook","state","props","orderBook","books","bookId","getActiveBookId","activeBookId","getActiveBookState","activeBookState","bucketReducer","orders","grouping","sortedOrders","priceLevel","bucket","length","price","size","total","prevTotal","push","getActiveBook","createSelector","orderBooks","getSortedAsks","book","asks","Object","keys","sort","reduce","value","getSortedBids","bids","reverse","getActiveGrouping","totalAskSize","values","a","b","totalBidSize","Math","max","bestAsk","bestBid","abs","useAppDispatch","useDispatch","useSelector","groupValues","PI_XBTUSD","label","PI_ETHUSD","customStyles","option","provided","width","borderBottom","color","styles","backgroundColor","padding","cursor","opacity","control","display","singleValue","isDisabled","transition","fontSize","menuList","OrderBookGroupingDropdown","dispatch","groupingValue","handleValueChanged","useCallback","newVal","updateGrouping","defaultValue","name","options","onChange","React","memo","SUBSCRIBE_ORDERBOOK","KILL_ACTIVE_BOOK","RECONNECT_ACTIVE_BOOK","subscribeOrderBook","createAction","killActiveBook","reconnectActiveBook","updateSingleBook","bookUpdates","bookType","bookIndex","orderBookSlice","createSlice","initialState","reducers","updateBook","action","payload","updateActiveBook","activeBookConnected","activeBookConnecting","bookDisconnected","extraReducers","builder","addCase","actions","OrderLevelRow","maxSize","orderLevel","type","isVerticallyOriented","rowClass","bidRow","askRow","percentageOrders","priceClass","bidPrice","askPrice","areHeadingsReversed","className","cx","val","toFixed","style","backgroundSize","map","OrderBookValueHeader","headings","header","heading","headerTitle","OrderBookColumn","loading","loadingClass","orderBookCol","rows","order","Button","button","children","DangerIcon","height","xmlns","viewBox","icon","cy","r","d","KillFeedButton","isDisconnected","handleClick","buttonText","killBtn","onClick","ToggleIcon","x","y","id","points","FEEDS","ToggleFeedButton","toggleBtn","OrderBookLoader","loader","OrderBook","elOrders","useRef","rowFontSize","parseInt","rowLineHeight","parseFloat","rowBottomMargin","numRowsToRender","current","floor","offsetHeight","isConnecting","slice","maxBidSize","maxAskSize","throttledBids","useThrottle","throttledAsks","throttledMaxSize","container","orderHeader","disconnectedText","ref","App","useWindowWidth","verticalClass","useEffect","app","OrderBookMessageHandler","productId","this","sendMessage","JSON","stringify","event","feed","product_ids","message","data","parse","product_id","err","subscribe","unsubscribe","socketUrl","socket","WebSocket","onopen","addEventListeners","handleConnected","onmessage","handleMessage","onclose","handleDisconnect","readyState","OPEN","send","close","socketMap","rootReducer","combineReducers","orderBookReducer","store","configureStore","reducer","middleware","storeApi","next","activeBook","getState","actualAction","disconnect","orderBookMessageHandler","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9a3d366.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"'../colors.module.css'\",\"dark-gray\":\"#23272a\",\"ghost-white\":\"#F7F7FF\",\"button\":\"components_button__2Zb4I\",\"icon\":\"components_icon__30S-9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"\\\"./colors.module.css\\\"\",\"mid-gray\":\"#2c2f33\",\"ghost-white\":\"#F7F7FF\",\"dark-gray\":\"#23272a\",\"app\":\"App_app__1kX79\",\"header\":\"App_header__3ZZ1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colors\":\"\\\"../../colors.module.css\\\"\",\"dark-green-fifty\":\"#00640050\",\"red-fifty\":\"#D32E0550\",\"dark-green\":\"#006400\",\"red\":\"#D32E05\",\"dark-gray\":\"#23272a\",\"mid-gray\":\"#2c2f33\",\"blurple\":\"#7289dA\",\"ghost-white\":\"#F7F7FF\",\"row-font-size\":\"18px\",\"row-line-height\":\"1.5em\",\"row-bottom-margin\":\"5px\",\"container\":\"OrderBook_container__3gBKY\",\"actions\":\"OrderBook_actions__1Meu6\",\"action\":\"OrderBook_action__12sXR\",\"orderHeader\":\"OrderBook_orderHeader__lwfEy\",\"orders\":\"OrderBook_orders__2fvpA\",\"header\":\"OrderBook_header__1YYRx\",\"orderBookCol\":\"OrderBook_orderBookCol__l8Mbd\",\"loading\":\"OrderBook_loading__VggxG\",\"rows\":\"OrderBook_rows__3DS8V\",\"bidRow\":\"OrderBook_bidRow__3ci1w\",\"askRow\":\"OrderBook_askRow__2iGhH\",\"bidPrice\":\"OrderBook_bidPrice__2itJa\",\"askPrice\":\"OrderBook_askPrice__21P0k\",\"headerTitle\":\"OrderBook_headerTitle__1lHeT\",\"val\":\"OrderBook_val__3C_F9\",\"killBtn\":\"OrderBook_killBtn__1qENh components_button__2Zb4I\",\"toggleBtn\":\"OrderBook_toggleBtn__2H4Ef components_button__2Zb4I\",\"loader\":\"OrderBook_loader__3cVi2\",\"disconnectedText\":\"OrderBook_disconnectedText__3sDaw\",\"groupDropdown\":\"OrderBook_groupDropdown__1XT4o\"};","import { createSelector } from 'reselect';\nimport { RootState } from '../../app/store';\nimport { OrderBookProps } from './OrderBook';\nimport { BookRecord, OrderBook, OrderRecord } from './orderBookSlice';\n\nexport const getBook = (state: RootState, props: OrderBookProps): OrderBook => state.orderBook.books[props.bookId];\nexport const getActiveBookId = (state: RootState): string => state.orderBook.activeBookId;\nexport const getActiveBookState = (state: RootState): string => state.orderBook.activeBookState;\nexport const getOrderBooks = (state: RootState): BookRecord => state.orderBook.books;\n\nconst bucketReducer =\n  (orders: OrderRecord, grouping: number) => (sortedOrders: Array<OrderLevel>, priceLevel: string) => {\n    const bucket = +priceLevel - (+priceLevel % grouping);\n    if (sortedOrders.length > 0 && sortedOrders[sortedOrders.length - 1].price === bucket) {\n      sortedOrders[sortedOrders.length - 1].size += orders[+priceLevel];\n      sortedOrders[sortedOrders.length - 1].total += orders[+priceLevel];\n      return sortedOrders;\n    }\n    const prevTotal = sortedOrders.length === 0 ? 0 : sortedOrders[sortedOrders.length - 1].total;\n    sortedOrders.push({\n      price: bucket,\n      size: orders[+priceLevel],\n      total: prevTotal + orders[+priceLevel],\n    });\n    return sortedOrders;\n  };\n\nexport const getActiveBook = createSelector(\n  [getActiveBookId, getOrderBooks],\n  (bookId, orderBooks): OrderBook | null => {\n    if (bookId in orderBooks) {\n      return orderBooks[bookId];\n    }\n    return null;\n  },\n);\n\nexport const getSortedAsks = createSelector([getBook], (book): Array<OrderLevel> => {\n  if (!book) {\n    return [];\n  }\n  const { grouping, asks } = book;\n  const sorted = Object.keys(asks).sort();\n  return sorted.reduce(bucketReducer(asks, grouping.value), []);\n});\n\nexport const getSortedBids = createSelector([getBook], (book): Array<OrderLevel> => {\n  if (!book) {\n    return [];\n  }\n  const { bids, grouping } = book;\n  const sorted = Object.keys(bids).sort().reverse();\n  return sorted.reduce(bucketReducer(bids, grouping.value), []);\n});\n\nexport const getMaxSize = createSelector([getBook], (book): number => {\n  if (!book) {\n    return 0;\n  }\n  const totalAskSize = Object.values(book.asks).reduce((a, b) => a + b, 0);\n  const totalBidSize = Object.values(book.bids).reduce((a, b) => a + b, 0);\n  return Math.max(totalAskSize, totalBidSize);\n});\n\nexport const getSpread = createSelector([getSortedAsks, getSortedBids], (asks, bids) => {\n  const bestAsk = asks.length > 0 ? asks[0].price : 0;\n  const bestBid = bids.length > 0 ? bids[0].price : 0;\n  return Math.abs(bestAsk - bestBid);\n});\n\nexport const getActiveGrouping = createSelector([getActiveBook], (book) => {\n  if (book) {\n    return book.grouping;\n  }\n  return null;\n});\n\nexport type OrderLevel = {\n  price: number;\n  size: number;\n  total: number;\n};\n","import { AnyAction } from '@reduxjs/toolkit';\nimport { Dispatch } from 'react';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\nexport const useAppDispatch = (): Dispatch<AnyAction> => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { useSelector } from 'react-redux';\nimport React, { useCallback } from 'react';\nimport Select, { StylesConfig } from 'react-select';\nimport { getActiveBookId, getActiveGrouping } from './orderBookSelectors';\nimport styles from './OrderBook.module.css';\nimport { useAppDispatch } from '../../app/hooks';\nimport { updateGrouping } from './orderBookSlice';\n\nexport type GroupValue = {\n  value: number;\n  label: string;\n};\nexport type GroupRecord = Record<string, Array<GroupValue>>;\nexport const groupValues: GroupRecord = {\n  PI_XBTUSD: [\n    { value: 0.5, label: 'Group 0.5' },\n    { value: 1, label: 'Group 1.0' },\n    { value: 2.5, label: 'Group 2.5' },\n  ],\n  PI_ETHUSD: [\n    { value: 0.05, label: 'Group 0.05' },\n    { value: 0.1, label: 'Group 0.1' },\n    { value: 0.25, label: 'Group 0.25' },\n  ],\n};\n\nconst customStyles: StylesConfig<GroupValue, true> = {\n  option: (provided) => ({\n    ...provided,\n    width: 150,\n    borderBottom: '0',\n    color: styles['ghost-white'],\n    backgroundColor: styles['mid-gray'],\n    padding: 20,\n    cursor: 'pointer',\n    '&:hover': {\n      opacity: 0.8,\n    },\n  }),\n  control: () => ({\n    width: 150,\n    color: styles['ghost-white'],\n    backgroundColor: styles['mid-gray'],\n    display: 'flex',\n    cursor: 'pointer',\n  }),\n  singleValue: (provided, state) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = 'opacity 300ms';\n\n    return {\n      ...provided,\n      opacity,\n      transition,\n      color: styles['ghost-white'],\n      backgroundColor: styles['mid-gray'],\n      fontSize: 16,\n    };\n  },\n  menuList: () => {\n    return {\n      padding: 0,\n    };\n  },\n};\n\nfunction OrderBookGroupingDropdown() {\n  const dispatch = useAppDispatch();\n  const activeBookId = useSelector(getActiveBookId);\n  const groupingValue = useSelector(getActiveGrouping);\n\n  const handleValueChanged = useCallback(\n    (newVal) => {\n      dispatch(updateGrouping(newVal));\n    },\n    [dispatch],\n  );\n\n  return (\n    <Select\n      value={groupingValue ? groupingValue : groupValues[activeBookId][1]}\n      styles={customStyles}\n      defaultValue={groupValues[activeBookId][1]}\n      name=\"group\"\n      options={groupValues[activeBookId]}\n      onChange={handleValueChanged}\n    />\n  );\n}\n\nexport default React.memo(OrderBookGroupingDropdown);\n","import { createSlice, createAction, PayloadAction } from '@reduxjs/toolkit';\nimport { Order } from './orderBookMessageHandler';\nimport { GroupValue, groupValues } from './OrderBookGroupingDropdown';\n\nconst initialState: OrderBookState = {\n  books: {},\n  activeBookId: 'PI_XBTUSD',\n  activeBookState: 'disconnected',\n};\n\nexport const SUBSCRIBE_ORDERBOOK = 'orderBooks/SUBSCRIBE_ORDERBOOK';\nexport const KILL_ACTIVE_BOOK = 'orderBooks/KILL_ACTIVE_BOOK';\nexport const RECONNECT_ACTIVE_BOOK = 'orderBooks/RECONNECT_ACTIVE_BOOK';\nexport const subscribeOrderBook = createAction<string>(SUBSCRIBE_ORDERBOOK);\nexport const killActiveBook = createAction<undefined>(KILL_ACTIVE_BOOK);\nexport const reconnectActiveBook = createAction<undefined>(RECONNECT_ACTIVE_BOOK);\nexport type OrderRecord = Record<number, number>;\n\nfunction updateSingleBook(state: OrderBookState, bookId: string, bookUpdates: Array<Order>, bookType: string) {\n  for (const bookIndex in bookUpdates) {\n    const price = +bookUpdates[bookIndex][0];\n    const size = +bookUpdates[bookIndex][1];\n    const book = bookType === 'bids' ? state.books[bookId].bids : state.books[bookId].asks;\n    if (size === 0) {\n      if (price in book) {\n        delete book[price];\n      }\n      continue;\n    }\n    book[price] = size;\n  }\n}\n\nexport const orderBookSlice = createSlice({\n  name: 'orderBooks',\n  initialState,\n  reducers: {\n    updateBook: (\n      state,\n      action: PayloadAction<{\n        bookId: string;\n        bids: Array<Order>;\n        asks: Array<Order>;\n      }>,\n    ) => {\n      const { bookId, bids, asks } = action.payload;\n      updateSingleBook(state, bookId, bids, 'bids');\n      updateSingleBook(state, bookId, asks, 'asks');\n    },\n    updateActiveBook: (state, action: PayloadAction<string>) => {\n      state.activeBookId = action.payload;\n    },\n    activeBookConnected: (state) => {\n      state.books[state.activeBookId] = {\n        grouping: groupValues[state.activeBookId][1],\n        bids: {},\n        asks: {},\n      };\n      state.activeBookState = 'connected';\n    },\n    activeBookConnecting: (state) => {\n      state.activeBookState = 'connecting';\n    },\n    bookDisconnected: (state, action: PayloadAction<string>) => {\n      if (action.payload === state.activeBookId) {\n        state.activeBookState = 'disconnected';\n      }\n      delete state.books[action.payload];\n    },\n    updateGrouping: (state, action: PayloadAction<GroupValue>) => {\n      state.books[state.activeBookId].grouping = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(subscribeOrderBook, (state) => {\n      state.activeBookState = 'connecting';\n      return state;\n    });\n    builder.addCase(killActiveBook, (state) => {\n      state.activeBookState = 'disconnected';\n      return state;\n    });\n  },\n});\n\nexport const {\n  activeBookConnected,\n  activeBookConnecting,\n  bookDisconnected,\n  updateActiveBook,\n  updateBook,\n  updateGrouping,\n} = orderBookSlice.actions;\n\nexport type BookRecord = Record<string, OrderBook>;\nexport type OrderBook = {\n  bids: OrderRecord;\n  asks: OrderRecord;\n  grouping: GroupValue;\n};\nexport type OrderBookState = {\n  books: BookRecord;\n  activeBookId: string;\n  activeBookState: 'connected' | 'disconnected' | 'connecting';\n};\n\nexport default orderBookSlice.reducer;\n","import React from 'react';\nimport { OrderLevel } from './orderBookSelectors';\nimport styles from './OrderBook.module.css';\nimport cx from 'classnames';\n\ntype OrderLevelProps = {\n  orderLevel: OrderLevel;\n  maxSize: number;\n  isVerticallyOriented: boolean;\n  type: 'bid' | 'ask';\n};\n\nfunction OrderLevelRow({ maxSize, orderLevel, type, isVerticallyOriented, ...props }: OrderLevelProps) {\n  const { price, size, total } = orderLevel;\n  const rowClass = type === 'bid' ? styles.bidRow : styles.askRow;\n  const percentageOrders = (total / maxSize) * 100;\n  const priceClass = type === 'bid' ? styles.bidPrice : styles.askPrice;\n  const areHeadingsReversed = !isVerticallyOriented && type === 'bid';\n  const values = [\n    <div className={cx(styles.val, priceClass)} key=\"price\">\n      {price.toFixed(2)}\n    </div>,\n    <div className={styles.val} key=\"size\">\n      {size}\n    </div>,\n    <div className={styles.val} key=\"total\">\n      {total}\n    </div>,\n  ];\n  return (\n    <div className={rowClass} style={{ backgroundSize: `${percentageOrders}% 100%` }} {...props}>\n      {areHeadingsReversed ? values.reverse().map((value) => value) : values.map((value) => value)}\n    </div>\n  );\n}\n\nexport default React.memo(OrderLevelRow);\n","import React from 'react';\nimport styles from './OrderBook.module.css';\n\ntype OrderBookValueHeaderProps = {\n  type: string;\n  isVerticallyOriented: boolean;\n};\n\nfunction OrderBookValueHeader({ type, isVerticallyOriented }: OrderBookValueHeaderProps) {\n  const areHeadingsReversed = !isVerticallyOriented && type === 'bid';\n  const headings = areHeadingsReversed ? ['TOTAL', 'SIZE', 'PRICE'] : ['PRICE', 'SIZE', 'TOTAL'];\n  return (\n    <div className={styles.header}>\n      {headings.map((heading) => (\n        <div className={styles.headerTitle} key={heading}>\n          {heading}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default React.memo(OrderBookValueHeader);\n","import React from 'react';\nimport OrderLevelRow from './OrderLevelRow';\nimport OrderBookValueHeader from './OrderBookValueHeader';\nimport { OrderLevel } from './orderBookSelectors';\nimport styles from './OrderBook.module.css';\nimport cx from 'classnames';\n\ntype OrderBookColumnProps = {\n  type: 'bid' | 'ask';\n  orders: Array<OrderLevel>;\n  maxSize: number;\n  loading: boolean;\n  isVerticallyOriented: boolean;\n};\n\nexport default function OrderBookColumn({\n  isVerticallyOriented,\n  loading,\n  type,\n  orders,\n  maxSize,\n}: OrderBookColumnProps): JSX.Element {\n  const loadingClass = loading ? styles.loading : '';\n  return (\n    <div className={cx(styles.orderBookCol, loadingClass)}>\n      <OrderBookValueHeader type={type} isVerticallyOriented={isVerticallyOriented} />\n      <div className={styles.rows}>\n        {orders.map((order) => (\n          <OrderLevelRow\n            orderLevel={order}\n            maxSize={maxSize}\n            key={order.price}\n            type={type}\n            isVerticallyOriented={isVerticallyOriented}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import styles from './components.module.css';\n\ntype ButtonProps = {\n  className?: string;\n  children?: React.ReactNode;\n  onClick: () => void;\n};\n\nexport default function Button({ className = styles.button, ...props }: ButtonProps): JSX.Element {\n  return (\n    <button className={className} {...props}>\n      {props.children}\n    </button>\n  );\n}\n","import styles from '../components.module.css';\n\nexport default function DangerIcon({ width = 16, height = 16 }: React.SVGProps<SVGSVGElement>): JSX.Element {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={height}\n      viewBox=\"0 0 478.125 478.125\"\n      className={styles.icon}\n    >\n      <g>\n        <g>\n          <g>\n            <circle cx=\"239.904\" cy=\"314.721\" r=\"35.878\" />\n            <path\n              d=\"M256.657,127.525h-31.9c-10.557,0-19.125,8.645-19.125,19.125v101.975c0,10.48,8.645,19.125,19.125,19.125h31.9\n              c10.48,0,19.125-8.645,19.125-19.125V146.65C275.782,136.17,267.138,127.525,256.657,127.525z\"\n            />\n            <path\n              d=\"M239.062,0C106.947,0,0,106.947,0,239.062s106.947,239.062,239.062,239.062c132.115,0,239.062-106.947,239.062-239.062\n              S371.178,0,239.062,0z M239.292,409.734c-94.171,0-170.595-76.348-170.595-170.596c0-94.248,76.347-170.595,170.595-170.595\n              s170.595,76.347,170.595,170.595C409.887,333.387,333.464,409.734,239.292,409.734z\"\n            />\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n}\n","import { useCallback } from 'react';\nimport { useAppDispatch } from '../../app/hooks';\nimport Button from '../../components/Button';\nimport DangerIcon from '../../components/icons/DangerIcon';\nimport { killActiveBook, reconnectActiveBook } from './orderBookSlice';\nimport styles from './OrderBook.module.css';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../app/store';\n\nexport default function KillFeedButton(): JSX.Element {\n  const dispatch = useAppDispatch();\n  const activeBookState = useSelector((state: RootState) => state.orderBook.activeBookState);\n  const isDisconnected = activeBookState === 'disconnected';\n  const handleClick = useCallback(() => {\n    if (isDisconnected) {\n      dispatch(reconnectActiveBook());\n    } else {\n      dispatch(killActiveBook());\n    }\n  }, [dispatch, isDisconnected]);\n  const buttonText = isDisconnected ? 'Reconnect' : 'Kill Feed';\n\n  return (\n    <Button className={styles.killBtn} onClick={handleClick}>\n      <DangerIcon />\n      <span>{buttonText}</span>\n    </Button>\n  );\n}\n","import styles from '../components.module.css';\r\n\r\nexport default function ToggleIcon({ width = 16, height = 16 }: React.SVGProps<SVGSVGElement>): JSX.Element {\r\n  return (\r\n    <svg\r\n      className={styles.icon}\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      x=\"0px\"\r\n      y=\"0px\"\r\n      viewBox=\"0 0 32 32\"\r\n      width={width}\r\n      height={height}\r\n    >\r\n      <g>\r\n        <g id=\"transfer\">\r\n          <g>\r\n            <polygon points=\"32,24 7.992,24 7.992,28 0,22 7.992,16 7.992,20 32,20\" />\r\n            <polygon points=\"0,12 24,12 24,16 32,10 24,4 24,8 0,8\" />\r\n          </g>\r\n        </g>\r\n      </g>\r\n    </svg>\r\n  );\r\n}\r\n","import { useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useAppDispatch } from '../../app/hooks';\nimport Button from '../../components/Button';\nimport ToggleIcon from '../../components/icons/ToggleIcon';\nimport { updateActiveBook } from './orderBookSlice';\nimport styles from './OrderBook.module.css';\nimport { getActiveBookId } from './orderBookSelectors';\n\nconst FEEDS = ['PI_XBTUSD', 'PI_ETHUSD'];\n\nexport default function ToggleFeedButton(): JSX.Element {\n  const dispatch = useAppDispatch();\n  const activeBookId = useSelector(getActiveBookId);\n  const handleClick = useCallback(() => {\n    if (activeBookId === FEEDS[0]) {\n      dispatch(updateActiveBook(FEEDS[1]));\n    } else {\n      dispatch(updateActiveBook(FEEDS[0]));\n    }\n  }, [dispatch, activeBookId]);\n\n  return (\n    <Button className={styles.toggleBtn} onClick={handleClick}>\n      <ToggleIcon />\n      Toggle feed\n    </Button>\n  );\n}\n","import ReactLoading from 'react-loading';\nimport styles from './OrderBook.module.css';\n\nexport default function OrderBookLoader(): JSX.Element {\n  return (\n    <div className={styles.loader}>\n      <ReactLoading type=\"bars\" color=\"white\" />\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { RootState } from '../../app/store';\nimport { getSortedBids, getSortedAsks, getActiveBookState } from './orderBookSelectors';\nimport styles from './OrderBook.module.css';\nimport OrderBookColumn from './OrderBookColumn';\nimport { useThrottle } from 'react-use';\nimport { useRef } from 'react';\nimport KillFeedButton from './KillFeedButton';\nimport ToggleFeedButton from './ToggleFeedButton';\nimport OrderBookLoader from './OrderBookLoader';\nimport OrderBookGroupingDropdown from './OrderBookGroupingDropdown';\n\nexport type OrderBookProps = {\n  bookId: string;\n  isVerticallyOriented: boolean;\n};\n\nconst RATE_OF_UPDATE_MS = 250;\n\nexport default function OrderBook(props: OrderBookProps): JSX.Element {\n  const { isVerticallyOriented } = props;\n  const elOrders = useRef<HTMLDivElement>(null);\n  const rowFontSize = parseInt(styles['row-font-size']);\n  const rowLineHeight = parseFloat(styles['row-line-height']);\n  const rowBottomMargin = parseInt(styles['row-bottom-margin']);\n  let numRowsToRender =\n    elOrders && elOrders.current\n      ? Math.floor(elOrders.current.offsetHeight / (rowFontSize * rowLineHeight + rowBottomMargin)) - 1\n      : 0;\n  const activeBookState = useSelector(getActiveBookState);\n  const isConnecting = activeBookState === 'connecting';\n  const isDisconnected = activeBookState === 'disconnected';\n  if (isVerticallyOriented) {\n    numRowsToRender = Math.floor(numRowsToRender / 2);\n  }\n\n  const bids = useSelector((state: RootState) => getSortedBids(state, props)).slice(0, numRowsToRender);\n  const asks = useSelector((state: RootState) => getSortedAsks(state, props)).slice(0, numRowsToRender);\n  const maxBidSize = bids.length > 0 ? bids[bids.length - 1].total : 0;\n  const maxAskSize = asks.length > 0 ? asks[asks.length - 1].total : 0;\n  const maxSize = Math.max(maxBidSize, maxAskSize);\n\n  const throttledBids = useThrottle(bids, RATE_OF_UPDATE_MS);\n  const throttledAsks = useThrottle(asks, RATE_OF_UPDATE_MS);\n  const throttledMaxSize = useThrottle(maxSize, RATE_OF_UPDATE_MS);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <div className={styles.orderHeader}>\n          <span>Order Book</span>\n          {isDisconnected ? <span className={styles.disconnectedText}>Disconnected</span> : null}\n          <OrderBookGroupingDropdown />\n        </div>\n        <div className={styles.orders} ref={elOrders}>\n          {isConnecting ? <OrderBookLoader /> : null}\n          <OrderBookColumn\n            loading={isConnecting}\n            orders={throttledBids}\n            maxSize={throttledMaxSize}\n            isVerticallyOriented={isVerticallyOriented}\n            type=\"bid\"\n          />\n          <OrderBookColumn\n            loading={isConnecting}\n            orders={throttledAsks}\n            maxSize={throttledMaxSize}\n            type=\"ask\"\n            isVerticallyOriented={isVerticallyOriented}\n          />\n        </div>\n      </div>\n      <div className={styles.actions}>\n        <ToggleFeedButton />\n        <KillFeedButton />\n      </div>\n    </>\n  );\n}\n","import React, { useEffect } from 'react';\nimport styles from './App.module.css';\nimport { subscribeOrderBook } from './features/order-book/orderBookSlice';\nimport { useAppDispatch } from './app/hooks';\nimport OrderBook from './features/order-book/OrderBook';\nimport { useSelector } from 'react-redux';\nimport { getActiveBookId } from './features/order-book/orderBookSelectors';\nimport { useWindowWidth } from '@react-hook/window-size';\nimport cx from 'classnames';\n\nfunction App(): JSX.Element {\n  const dispatch = useAppDispatch();\n  const activeBookId = useSelector(getActiveBookId);\n  const windowWidth = useWindowWidth();\n  const isVerticallyOriented = windowWidth <= 1024;\n  const verticalClass = isVerticallyOriented ? 'vertical' : '';\n\n  useEffect(() => {\n    dispatch(subscribeOrderBook(activeBookId));\n  }, [dispatch, activeBookId]);\n\n  return (\n    <div className={cx(styles.app, verticalClass)}>\n      <header className={styles.header}>{activeBookId}</header>\n      <OrderBook bookId={activeBookId} isVerticallyOriented={isVerticallyOriented} />\n    </div>\n  );\n}\n\nexport default App;\n","import MessageHandler from '../../app/messageHandler';\nimport { AppDispatch } from '../../app/store';\nimport { activeBookConnected, bookDisconnected, updateBook } from './orderBookSlice';\n\nexport type Order = [price: number, size: number];\nexport type OrderBookMessage = {\n  feed: string;\n  product_id: string;\n  bids: Array<Order>;\n  asks: Array<Order>;\n};\n\nexport default class OrderBookMessageHandler extends MessageHandler {\n  productId: string;\n  dispatch: AppDispatch;\n\n  constructor(productId: string, dispatch: AppDispatch) {\n    super(productId, 'wss://www.cryptofacilities.com/ws/v1');\n    this.productId = productId;\n    this.dispatch = dispatch;\n  }\n\n  subscribe(productId: string): void {\n    this.productId = productId;\n    this.sendMessage(\n      JSON.stringify({\n        event: 'subscribe',\n        feed: 'book_ui_1',\n        product_ids: [this.productId],\n      }),\n    );\n  }\n\n  unsubscribe(): void {\n    this.sendMessage(\n      JSON.stringify({\n        event: 'unsubscribe',\n        feed: 'book_ui_1',\n        product_ids: [this.productId],\n      }),\n    );\n  }\n\n  handleMessage(message: MessageEvent): void {\n    try {\n      const data: OrderBookMessage = JSON.parse(message.data);\n      this.dispatch(\n        updateBook({\n          bookId: data.product_id,\n          bids: data.bids,\n          asks: data.asks,\n        }),\n      );\n    } catch (err) {\n      // pass through invalid messages\n    }\n  }\n\n  handleConnected(): void {\n    this.subscribe(this.productId);\n    this.dispatch(activeBookConnected());\n  }\n\n  handleDisconnect(): void {\n    this.dispatch(bookDisconnected(this.productId));\n  }\n\n  disconnect(): void {\n    this.unsubscribe();\n    super.disconnect();\n  }\n}\n","export default class MessageHandler {\n  id: string;\n  socket: WebSocket;\n\n  constructor(id: string, socketUrl: string) {\n    this.id = id;\n    this.socket = new WebSocket(socketUrl);\n    this.socket.onopen = () => {\n      this.addEventListeners();\n      this.handleConnected();\n    };\n  }\n\n  addEventListeners(): void {\n    this.socket.onmessage = (message: MessageEvent) => {\n      this.handleMessage(message);\n    };\n\n    this.socket.onclose = () => {\n      this.handleDisconnect();\n    };\n  }\n\n  sendMessage(message: string): void {\n    if (this.socket.readyState === WebSocket.OPEN) {\n      this.socket.send(message);\n    }\n  }\n\n  disconnect(): void {\n    this.socket.close();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  handleMessage(message: MessageEvent): void {\n    // handle message\n  }\n\n  handleConnected(): void {\n    // handle connected\n  }\n\n  handleDisconnect(): void {\n    // handle disconnect\n  }\n}\n","import { Middleware } from 'redux';\nimport type { RootState } from '../../app/store';\nimport OrderBookMessageHandler from './orderBookMessageHandler';\nimport {\n  activeBookConnecting,\n  KILL_ACTIVE_BOOK,\n  RECONNECT_ACTIVE_BOOK,\n  SUBSCRIBE_ORDERBOOK,\n  updateActiveBook,\n} from './orderBookSlice';\n\nconst socketMap: OrderBookMessageHandlerRecord = {};\n\nexport type OrderBookMessageHandlerRecord = Record<string, OrderBookMessageHandler>;\nexport const orderBookMessageHandlerMiddleware: Middleware<Record<string, unknown>, RootState> =\n  (storeApi) => (next) => (action) => {\n    const activeBook = storeApi.getState().orderBook.activeBookId;\n    let actualAction = action;\n\n    switch (action.type) {\n      case updateActiveBook.type: {\n        if (activeBook in socketMap) {\n          socketMap[activeBook].disconnect();\n          delete socketMap[activeBook];\n        }\n        break;\n      }\n      case SUBSCRIBE_ORDERBOOK: {\n        if (activeBook in socketMap) {\n          socketMap[activeBook].disconnect();\n          delete socketMap[activeBook];\n        }\n        const orderBookMessageHandler = new OrderBookMessageHandler(action.payload, storeApi.dispatch);\n        socketMap[action.payload] = orderBookMessageHandler;\n        actualAction = activeBookConnecting();\n        break;\n      }\n      case KILL_ACTIVE_BOOK: {\n        if (activeBook in socketMap) {\n          socketMap[activeBook].socket.close();\n          delete socketMap[activeBook];\n        }\n        break;\n      }\n      case RECONNECT_ACTIVE_BOOK: {\n        const orderBookMessageHandler = new OrderBookMessageHandler(activeBook, storeApi.dispatch);\n        socketMap[activeBook] = orderBookMessageHandler;\n        actualAction = activeBookConnecting();\n        break;\n      }\n    }\n    return next(actualAction);\n  };\n","import { combineReducers } from '@reduxjs/toolkit';\nimport orderBookReducer from '../features/order-book/orderBookSlice';\n\nexport const rootReducer = combineReducers({\n  orderBook: orderBookReducer,\n});\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport { orderBookMessageHandlerMiddleware } from '../features/order-book/orderBookMessageHandlerMiddleware';\nimport { rootReducer } from './rootReducer';\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: [orderBookMessageHandlerMiddleware],\n});\n\nexport type AppStore = typeof store;\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof rootReducer>;\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}